// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Input$ReactHooksTemplate = require("./Input.bs.js");
var Label$ReactHooksTemplate = require("./Label.bs.js");
var Table$ReactHooksTemplate = require("./Table.bs.js");
var Result$ReactHooksTemplate = require("./Result.bs.js");
var DataStore$ReactHooksTemplate = require("./DataStore.bs.js");
var FormStore$ReactHooksTemplate = require("./FormStore.bs.js");

function Calc(Props) {
  var match = React.useReducer(DataStore$ReactHooksTemplate.Data[/* reducer */2], DataStore$ReactHooksTemplate.Data[/* initialState */0]);
  var dispatchData = match[1];
  var dataState = match[0];
  var match$1 = React.useReducer(FormStore$ReactHooksTemplate.Form[/* reducer */2], FormStore$ReactHooksTemplate.Form[/* initialState */0]);
  var dispatchForm = match$1[1];
  var formState = match$1[0];
  var handleChange = function (name, value) {
    return Curry._1(dispatchForm, /* InputChange */Block.__(0, [
                  name,
                  value
                ]));
  };
  var handleBlur = function (name, param) {
    return Curry._1(dispatchForm, /* UpdateSavingsRate */Block.__(1, [name]));
  };
  var handleSubmit = function (e) {
    e.preventDefault();
    Curry._1(dispatchForm, /* Submit */0);
    return Curry._1(dispatchData, /* Calculate */[formState]);
  };
  var match$2 = formState[/* hasSubmitted */5] === true;
  return React.createElement("main", {
              className: "container"
            }, React.createElement("form", {
                  className: "section",
                  onSubmit: handleSubmit
                }, React.createElement("h1", {
                      className: "title"
                    }, "FIRE Calculator"), React.createElement(Label$ReactHooksTemplate.make, {
                      children: null
                    }, "Currently Saved / Invested", React.createElement(Input$ReactHooksTemplate.make, {
                          onChange: handleChange,
                          onBlur: handleBlur,
                          name: /* CurrentBalance */1,
                          value: formState[/* currBalance */1]
                        })), React.createElement(Label$ReactHooksTemplate.make, {
                      children: null
                    }, "Annual Income", React.createElement(Input$ReactHooksTemplate.make, {
                          onChange: handleChange,
                          onBlur: handleBlur,
                          name: /* Income */2,
                          value: formState[/* income */2]
                        })), React.createElement(Label$ReactHooksTemplate.make, {
                      children: null
                    }, "Annual Expenses", React.createElement(Input$ReactHooksTemplate.make, {
                          onChange: handleChange,
                          onBlur: handleBlur,
                          name: /* Spending */4,
                          value: formState[/* spending */3]
                        })), React.createElement(Label$ReactHooksTemplate.make, {
                      children: null
                    }, "Savings rate (%)", React.createElement(Input$ReactHooksTemplate.make, {
                          onChange: handleChange,
                          onBlur: handleBlur,
                          name: /* SavingsRate */3,
                          value: formState[/* savingsRate */4]
                        })), React.createElement(Label$ReactHooksTemplate.make, {
                      children: null
                    }, "Expected annual return (%)", React.createElement(Input$ReactHooksTemplate.make, {
                          onChange: handleChange,
                          onBlur: handleBlur,
                          name: /* AnnualReturn */0,
                          value: formState[/* annualReturn */0]
                        })), React.createElement("button", {
                      className: "button is-primary"
                    }, "Calculate")), match$2 ? React.createElement(React.Fragment, undefined, React.createElement(Result$ReactHooksTemplate.make, {
                        targetYear: dataState[/* targetYear */2],
                        targetAmount: dataState[/* targetAmount */1],
                        savingsRate: formState[/* savingsRate */4]
                      }), React.createElement(Table$ReactHooksTemplate.make, {
                        annualReturn: formState[/* annualReturn */0],
                        data: dataState[/* resultList */0]
                      })) : null);
}

var make = Calc;

exports.make = make;
/* react Not a pure module */
